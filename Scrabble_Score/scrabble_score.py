# -*- coding: utf-8 -*-
"""Scrabble Score

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EasQf-Q7QDkpxNl7PQ9nzf5rlMG6Zort
"""

import random
import time
import requests
import unittest

# Scrabble letter values
SCRABBLE_LETTER_VALUES = {
    1: 'AEIOULNRST',
    2: 'DG',
    3: 'BCMP',
    4: 'FHVWY',
    5: 'K',
    8: 'JX',
    10: 'QZ'
}

# Calculate scrabble score for a given word
def calculate_score(word):
    if not word.isalpha():
        raise ValueError("Input must only contain alphabetic characters.")

    word = word.upper()
    score = 0
    for letter in word:
        for value, letters in SCRABBLE_LETTER_VALUES.items():
            if letter in letters:
                score += value
    return score

# Check if the word is valid using an online dictionary
def is_valid_word(word):
    response = requests.get(f"https://api.dictionaryapi.dev/api/v2/entries/en/{word}")
    return response.status_code == 200

# Generate a random word length for the game
def get_random_word_length():
    return random.randint(3, 7)

# Timer for input
def input_with_timer(timeout=15):
    print(f"Please enter a word of {required_length} letters in {timeout} seconds:")
    start_time = time.time()
    try:
        user_input = input()
        elapsed_time = time.time() - start_time
        if elapsed_time > timeout:
            print("Time's up!")
            return None
        return user_input
    except TimeoutError:
        return None

# Game function with multiple rounds
def game():
    total_score = 0
    rounds = 0
    while rounds < 10:
        global required_length
        required_length = get_random_word_length()
        word = input_with_timer()

        if word is None:
            print("You didn't enter a word in time.")
            continue

        if len(word) != required_length:
            print(f"Invalid word length! Expected {required_length} letters.")
            continue

        if is_valid_word(word):
            round_score = calculate_score(word)
            print(f"Score for this word: {round_score}")
            total_score += round_score
            rounds += 1
        else:
            print(f"{word} is not a valid word.")

    print(f"Game over! Your total score is: {total_score}")

# Test cases using unittest
class TestScrabbleGame(unittest.TestCase):

    # Test single letter scores
    def test_single_letter_score(self):
        self.assertEqual(calculate_score('A'), 1)
        self.assertEqual(calculate_score('K'), 5)
        self.assertEqual(calculate_score('Q'), 10)

    # Test multiple letters and case insensitivity
    def test_multiple_letter_score(self):
        self.assertEqual(calculate_score('cabbage'), 14)
        self.assertEqual(calculate_score('Scrabble'), 14)
        self.assertEqual(calculate_score('CABBAGE'), 14)

    # Test for invalid input (non-alphabet characters)
    def test_invalid_input(self):
        with self.assertRaises(ValueError):
            calculate_score('123')
        with self.assertRaises(ValueError):
            calculate_score('hello!')

if __name__ == '__main__':
    print("Welcome to the Scrabble game!")
    game()

    unittest.main()